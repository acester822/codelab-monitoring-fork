/*
Module: Docker Compose
Description: LGTMP Receiver Provider
*/

/********************************************
 * ARGUMENTS
 ********************************************/
argument "tenant" {
	optional = true
	default  = "anonymous"
}

argument "metrics_endpoint" {
	comment  = "Where to send collected metrics."
	optional = true
	default  = "http://mimir:8080"
}

argument "logs_endpoint" {
	comment  = "Where to send collected logs."
	optional = true
	default  = "http://loki:3100"
}

argument "traces_endpoint" {
	comment  = "Where to send collected traces."
	optional = true
	default  = "tempo:4317"
}

argument "profiles_endpoint" {
	comment  = "Where to send collected profiles."
	optional = true
	default  = "http://pyroscope:4040"
}

/********************************************
 * EXPORTS
 ********************************************/

export "metrics_receiver" {
	value = prometheus.remote_write.docker_compose.receiver
}

export "logs_receiver" {
	value = loki.write.docker_compose.receiver
}

export "traces_receiver" {
	value = otelcol.exporter.otlp.docker_compose.input
}

export "profiles_receiver" {
	value = pyroscope.write.docker_compose.receiver
}

/********************************************
 * Endpoints
 ********************************************/

// Metrics
prometheus.remote_write "docker_compose" {
	endpoint {
		url                    = argument.metrics_endpoint.value + "/api/v1/push"
		send_native_histograms = true
	}

	external_labels = {
		"scraped_by" = "grafana-agent",
	}
}

// Logs
loki.write "docker_compose" {
	endpoint {
		url       = argument.logs_endpoint.value + "/loki/api/v1/push"
		tenant_id = argument.tenant.value
	}

	external_labels = {
		"scraped_by" = "grafana-agent",
	}
}

// Traces
otelcol.exporter.otlp "docker_compose" {
	client {
		endpoint = argument.traces_endpoint.value

		tls {
			insecure             = true
			insecure_skip_verify = true
		}
	}
}

// Profiles
pyroscope.write "docker_compose" {
	endpoint {
		url = argument.profiles_endpoint.value
	}

	external_labels = {
		"scraped_by" = "grafana-agent",
		"cluster"    = "docker-compose",
		"namespace"  = "monitoring-system",
	}
}
