/*
Module: integration-job
Description: Wrapper module to include all Docker containers metric modules
*/
argument "forward_to" {
	comment = "Must be a list(MetricssReceiver) where collected metrics should be forwarded to"
}

argument "scrape_interval" {
	comment  = "How often to scrape metrics from the targets (default: 60s)"
	optional = true
}

argument "scrape_timeout" {
	comment  = "How long before a scrape times out (default: 10s)"
	optional = true
}

/********************************************
 * Integrations Node Exporter
 ********************************************/
prometheus.exporter.unix "peu_unix" {
	set_collectors     = ["cpu"]
	disable_collectors = ["diskstats", "mdadm", "textfile", "hwmon"]
}

/********************************************
 * Prometheus Scrape Integrations Targets
 ********************************************/
prometheus.scrape "ps_integrations" {
	targets = concat(
		prometheus.exporter.unix.peu_unix.targets,
	)

	enable_protobuf_negotiation = true
	scrape_classic_histograms   = true

	scrape_interval = coalesce(argument.scrape_interval.value, "60s")
	scrape_timeout  = coalesce(argument.scrape_timeout.value, "10s")

	clustering {
		enabled = true
	}

	forward_to = [prometheus.relabel.pr_integrations.receiver]
}

/********************************************
 * Prometheus Metric Relabelings (post-scrape)
 ********************************************/
prometheus.relabel "pr_integrations" {
	forward_to = argument.forward_to.value

	rule {
		source_labels = ["job"]
		regex         = "integrations/(.*)"
		target_label  = "pod"
		replacement   = "${1}"
	}

	rule {
		source_labels = ["job"]
		regex         = "integrations/(.*)"
		target_label  = "container"
		replacement   = "${1}"
	}
}
