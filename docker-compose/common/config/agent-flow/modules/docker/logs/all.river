/*
Module: log-all
Description: Wrapper module to include all docker logging modules and use cri parsing
*/
argument "forward_to" {
	// comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
	optional = false
}

argument "tenant" {
	// comment = "The tenant to filter logs to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
	optional = true
	default  = ".*"
}

argument "keep_labels" {
	// comment = "List of labels to keep before the log message is written to Loki"
	optional = true
	default  = [
		"app",
		"cluster",
		"component",
		"container",
		"deployment",
		"env",
		"filename",
		"instance",
		"job",
		"level",
		"log_type",
		"namespace",
		"region",
		"service",
		"squad",
		"team",
	]
}

module.file "log_targets" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/targets/logs-from-docker.river"

	arguments {
		forward_to = [module.file.log_formats_all.exports.process.receiver]
		tenant     = argument.tenant.value
	}
}

module.file "log_formats_all" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/log-formats/all.river"

	arguments {
		forward_to = [module.file.log_level_default.exports.process.receiver]
	}
}

module.file "log_level_default" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/labels/log-level.river"

	arguments {
		// here we fork, one branch goes to the log level module, the other goes to the metrics module
		// this is because we need to reduce the labels on the pre-metrics but they are still necessary in
		// downstream modules
		forward_to = [
			module.file.pre_process_metrics.exports.process.receiver,
			module.file.drop_levels.exports.process.receiver,
		]
	}
}

module.file "pre_process_metrics" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/metrics/pre-process-bytes-lines.river"

	arguments {
		forward_to  = [module.file.drop_levels.exports.process.receiver]
		keep_labels = argument.keep_labels.value
	}
}

module.file "drop_levels" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/drops/levels.river"

	arguments {
		forward_to = [module.file.scrub_all.exports.process.receiver]
	}
}

module.file "scrub_all" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/scrubs/all.river"

	arguments {
		forward_to = [module.file.mask_all.exports.process.receiver]
	}
}

module.file "mask_all" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/masks/all.river"

	arguments {
		forward_to = [module.file.label_keep.exports.process.receiver]
	}
}

module.file "label_keep" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/labels/keep-labels.river"

	arguments {
		forward_to  = [module.file.post_process_metrics.exports.process.receiver]
		keep_labels = argument.keep_labels.value
	}
}

module.file "post_process_metrics" {
	filename = env("AGENT_CONFIG_FOLDER") + "/modules/docker/logs/metrics/post-process-bytes-lines.river"

	arguments {
		forward_to = argument.forward_to.value
	}
}
