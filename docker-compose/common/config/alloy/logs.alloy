logging {
	level  = coalesce(env("ALLOY_LOG_LEVEL"), "info")
	format = "logfmt"
}

/********************************************
 * Grafana LGTMP Stack Receiver Provider
 ********************************************/
import.file "provider" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/provider"
}

// get lgtmp receivers provider
provider.self_hosted "compose" {
	logs_endpoint    = "http://gateway:3100"
	metrics_endpoint = "http://gateway:8080"
}

/********************************************
 * Logs
 ********************************************/
import.file "logs" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/logs"
}

logs.label_auto_scrape "default" {
	label_prefix = "logs.grafana.com"
	forward_to   = [logs.keep_labels.default.receiver]
}

// logs Processing And Transformation
logs.keep_labels "default" {
	forward_to = [provider.self_hosted.compose.logs_receiver]
}

/********************************************
 * Metrics
 ********************************************/
import.file "metrics" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/metrics"
}

// targets auto scrape by docker compose label
metrics.label_auto_scrape "default" {
	label_prefix    = "metrics.grafana.com"
	forward_to      = [provider.self_hosted.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.jobs_minio "scrape" {
	forward_to      = [provider.self_hosted.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.integrations_cadvisor "scrape" {
	forward_to      = [provider.self_hosted.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.integrations_node_exporter "scrape" {
	forward_to      = [provider.self_hosted.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.integrations_memcached "scrape" {
	forward_to      = [provider.self_hosted.compose.metrics_receiver]
	scrape_interval = "15s"

	memcached_address = "memcached:11211"
}
