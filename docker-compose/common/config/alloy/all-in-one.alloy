logging {
	level  = coalesce(env("ALLOY_LOG_LEVEL"), "info")
	format = "logfmt"
}

/********************************************
 * Grafana LGTMP Stack Receiver Provider
 ********************************************/
import.file "provider" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/provider"
}

// get self hosted receivers provider
provider.self_hosted_stack "compose" {
	logs_endpoint_url     = "http://gateway:3100/loki/api/v1/push"
	metrics_endpoint_url  = "http://gateway:8080/api/v1/push"
	traces_endpoint_url   = "http://gateway:4318"
	profiles_endpoint_url = "http://gateway:4040"
}

/********************************************
 * Metrics
 ********************************************/
import.file "metrics" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/metrics"
}

metrics.labels_scrape "all" {
	label_prefix    = "metrics.grafana.com"
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.jobs_scrape "all" {
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.integrations_scrape "all" {
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}

/********************************************
 * Logs
 ********************************************/
import.file "logs" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/logs"
}

logs.labels_scrape "all" {
	label_prefix = "logs.grafana.com"
	forward_to   = [logs.keep_labels.default.receiver]
}

// logs Processing And Transformation
logs.keep_labels "default" {
	forward_to = [provider.self_hosted_stack.compose.logs_receiver]
}

/********************************************
 * Traces
 ********************************************/
import.file "traces" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/traces"
}

// traces Processing And Transformation
traces.pat "all" {
	metrics_forward_to = [provider.self_hosted_stack.compose.metrics_receiver]
	logs_forward_to    = [provider.self_hosted_stack.compose.logs_receiver]
	traces_forward_to  = [provider.self_hosted_stack.compose.traces_receiver]
}

tracing {
	// Write all spans. Don't do this in production!
	sampling_fraction = 1

	// Forward Alloy internal spans to traces process.
	write_to = [traces.pat.all.alloy_traces_input]
}

/********************************************
 * Profiles
 ********************************************/
import.file "profiles" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/profiles"
}

profiles.labels_scrape "all" {
	label_prefix = "profiles.grafana.com"
	forward_to   = [provider.self_hosted_stack.compose.profiles_receiver]
}
