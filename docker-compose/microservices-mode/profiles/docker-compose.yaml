version: '3.9'

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/agent-collect-profiles.yaml

# Microservices mode (Profiles)
services:
  gateway:
    depends_on:
      distributor:
        condition: service_healthy
    image: nginxinc/nginx-unprivileged:1.25-alpine
    restart: always
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/pyroscope/gateway_pyroscope.conf.template:/etc/nginx/templates/gateway_pyroscope.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - PYROSCOPE_DISTRIBUTOR_HOST=distributor
      - PYROSCOPE_QUERY_FRONTEND_HOST=query-frontend
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4040/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "4040"

  distributor:
    depends_on:
      ingester:
        condition: service_started
    image: &pyroscopeImage grafana/pyroscope:1.3.0
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    ports:
      - "4040"
    command:
      - -config.file=/etc/config.yaml
      - -target=distributor
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      # - -runtime-config.file=/etc/overrides/overrides.yaml
      # - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4040/ready || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  ingester:
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=ingester
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  compactor:
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=compactor
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  query-frontend:
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    ports:
      - "4040"
    command:
      - -config.file=/etc/config.yaml
      - -target=query-frontend
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  querier:
    depends_on:
      minio:
        condition: service_healthy
      query-frontend:
        condition: service_started
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=querier
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
      - -store-gateway.sharding-ring.replication-factor=1
    networks:
      default:
        aliases:
          - pyroscope-memberlist
  
  query-scheduler:
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=query-scheduler
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=error
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  store-gateway:
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../../common/config/pyroscope/microservices-mode-profiles.yaml:/etc/config.yaml # Note: profiles use microservices-mode-profiles.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=store-gateway
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=error
      - -store-gateway.sharding-ring.replication-factor=1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  grafana:
    image: grafana/grafana:10.3.1
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ../../common/config/pyroscope/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # load datasources
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph
      - GF_DIAGNOSTICS_PROFILING_ENABLED=true
      - GF_DIAGNOSTICS_PROFILING_ADDR=0.0.0.0
      - GF_DIAGNOSTICS_PROFILING_PORT=6060
    ports:
      - "3000:3000"
