version: '3.9'

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/agent-collect-traces.yaml
  - path: ../../common/compose-include/load-mimir-rule.yaml
  - path: ../../common/compose-include/load-tempo-rule.yaml

# Microservices mode (Traces)
services:
  gateway:
    depends_on:
      distributor:
        condition: service_healthy
    image: nginxinc/nginx-unprivileged:1.25-alpine
    restart: always
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/tempo/gateway_tempo.conf.template:/etc/nginx/templates/gateway_tempo.conf.template
      - ../../common/config/mimir/gateway_mimir.conf.template:/etc/nginx/templates/gateway_mimir.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - TEMPO_DISTRIBUTOR_HOST=distributor
      - TEMPO_INGESTER_HOST=ingester
      - TEMPO_QUERY_FRONTEND_HOST=query-frontend
      - TEMPO_COMPACTOR_HOST=compactor
      - MIMIR_DISTRIBUTOR_HOST=mimir
      - MIMIR_ALERT_MANAGER_HOST=mimir
      - MIMIR_RULER_HOST=mimir
      - MIMIR_QUERY_FRONTEND_HOST=mimir
      - MIMIR_COMPACTOR_HOST=mimir
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3200"
      - "4317"
      - "4318"
      - "8080"

  distributor:
    depends_on:
      ingester:
        condition: service_started
    image: &tempoImage grafana/tempo:2.4.0
    volumes:
      - ../../common/config/tempo/microservices-mode-traces.yaml:/etc/tempo.yaml # Note: Tempo use microservices-mode-traces.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=distributor
      - -config.expand-env=true
      - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  ingester:
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../../common/config/tempo/microservices-mode-traces.yaml:/etc/tempo.yaml # Note: Tempo use microservices-mode-traces.yaml
    ports:
      - "3100"
    command:
      - -config.file=/etc/tempo.yaml
      - -target=ingester
      - -config.expand-env=true
      - -log.level=warn
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - tempo-memberlist

  query-frontend:
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../../common/config/tempo/microservices-mode-traces.yaml:/etc/tempo.yaml # Note: Tempo use microservices-mode-traces.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=query-frontend
      - -config.expand-env=true
      - -log.level=warn

  querier:
    depends_on:
      minio:
        condition: service_healthy
      query-frontend:
        condition: service_started
    image: *tempoImage
    volumes:
      - ../../common/config/tempo/microservices-mode-traces.yaml:/etc/tempo.yaml # Note: Tempo use microservices-mode-traces.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=querier
      - -config.expand-env=true
      - -log.level=warn

  compactor:
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../../common/config/tempo/microservices-mode-traces.yaml:/etc/tempo.yaml # Note: Tempo use microservices-mode-traces.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=compactor
      - -log.level=error

  mimir:
    depends_on:
      minio:
        condition: service_healthy
    image: grafana/mimir:2.11.0
    volumes:
      - ../../common/config/mimir/monolithic-mode-metrics.yaml:/etc/config.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=all
      - -config.expand-env=true
      - -log.level=warn
    environment:
      - JAEGER_SERVICE_NAME=mimir
      - JAEGER_AGENT_HOST=agent
      - JAEGER_AGENT_PORT=6831
      - JAEGER_REPORTER_MAX_QUEUE_SIZE=1000
      - JAEGER_SAMPLER_PARAM=1
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_TAGS=namespace=monitoring-system
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - mimir-memberlist

  grafana:
    depends_on:
      agent:
        condition: service_started
    image: grafana/grafana:10.3.3
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ../../common/config/tempo/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # load datasources
      - ../../../monitoring-mixins/mimir-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/mimir-mixin
      - ../../../monitoring-mixins/tempo-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/tempo-mixin
      - ../../../monitoring-mixins/agent-flow-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/agent-flow-mixin
      - ../../../monitoring-mixins/go-runtime-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/go-runtime-mixin
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor tracesEmbeddedFlameGraph traceqlSearch correlations metricsSummary traceToMetrics traceToProfiles
      - GF_TRACING_OPENTELEMETRY_OTLP_ADDRESS=agent:4317
      - GF_TRACING_OPENTELEMETRY_CUSTOM_ATTRIBUTES=namespace:monitoring-system
    ports:
      - "3000:3000"
