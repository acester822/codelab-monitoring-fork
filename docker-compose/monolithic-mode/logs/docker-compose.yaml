version: '3.9'

# ============================================================================ #
#                  Monolithic Mode - Logs
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/agent-collect-logs.yaml

services:
  gateway:
    depends_on:
      loki:
        condition: service_healthy
    image: nginxinc/nginx-unprivileged:1.25-alpine
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/loki/gateway_loki.conf.template:/etc/nginx/templates/gateway_loki.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - LOKI_DISTRIBUTOR_HOST=loki
      - LOKI_INGESTER_HOST=loki
      - LOKI_RULER_HOST=loki
      - LOKI_QUERY_FRONTEND_HOST=loki
      - LOKI_QUERIER_HOST=loki
      - LOKI_COMPACTOR_HOST=loki
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3100:3100"

  loki:
    depends_on:
      minio:
        condition: service_healthy
    image: &lokiImage grafana/loki:2.9.5
    command:
      - -config.file=/etc/loki.yaml
      - -target=all
      - -config.expand-env=true
    volumes:
      - ../../common/config/loki/monolithic-mode-logs.yaml:/etc/loki.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    # Horizontally scale up support(Monolithic mode)
    # https://grafana.com/docs/loki/latest/fundamentals/architecture/deployment-modes/#simple-scalable-deployment-mode
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - loki-memberlist

  grafana:
    image: grafana/grafana:10.4.0
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ../../common/config/loki/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # load datasources
    environment:
      - GF_LOG_LEVEL=warn
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
    ports:
      - "3000:3000"
