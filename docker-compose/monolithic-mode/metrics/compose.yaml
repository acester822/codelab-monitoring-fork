version: '3.9'

# ============================================================================ #
#                  Monolithic Mode - Metrics
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/memcached.yaml
  - path: ../../common/compose-include/mimirtool.yaml
  - path: ../../common/compose-include/grafana.yaml

services:
  grafana-agent:
    # https://github.com/qclaogui/codelab-monitoring/blob/main/docker-compose/common/config/agent-flow/modules/docker/README.md
    labels:
      logs.agent.grafana.com/log-format: logfmt
    depends_on:
      gateway:
        condition: service_healthy
    image: ${AGENT_IMAGE:-docker.io/grafana/agent:v0.40.3}
    volumes:
      - ../../common/config/agent-flow:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/metrics.river
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --cluster.join-addresses=grafana-agent-cluster:12345
      - --disable-reporting=true
    environment:
      - AGENT_MODE=flow
      - AGENT_CONFIG_FOLDER=/etc/agent-config
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:12345/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "12345:12345"
    # scale up support
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - grafana-agent-cluster

  gateway:
    labels:
      metrics.agent.grafana.com/scrape: false
    depends_on:
      mimir:
        condition: service_healthy
    image: ${NGINX_IMAGE:-docker.io/nginxinc/nginx-unprivileged:1.25-alpine}
    volumes:
      - ../../common/config/nginx/10-default-lgtmp.envsh:/docker-entrypoint.d/10-default-lgtmp.envsh
      - ../../common/config/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ../../common/config/mimir/gateway_mimir.conf:/etc/nginx/templates/gateway_mimir.conf.template
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mimir:
    depends_on:
      minio:
        condition: service_healthy
    image: ${MIMIR_IMAGE:-docker.io/grafana/mimir:2.11.0}
    volumes:
      - ../../common/config/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir/monolithic-mode-metrics.yaml
      - -target=all
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    # expose 38080 port so we can directly access mimir inside container
    ports:
      - "38080:8080"
    networks:
      default:
        aliases:
          - mimir-memberlist
