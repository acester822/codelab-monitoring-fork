version: '3.9'

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/agent-collect-traces.yaml

# Monolithic mode (Traces)
services:
  gateway:
    depends_on:
      tempo:
        condition: service_healthy
    image: nginxinc/nginx-unprivileged:1.25-alpine
    restart: always
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/tempo/gateway_tempo.conf.template:/etc/nginx/templates/gateway_tempo.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - TEMPO_DISTRIBUTOR_HOST=tempo
      - TEMPO_INGESTER_HOST=tempo
      - TEMPO_QUERY_FRONTEND_HOST=tempo
      - TEMPO_COMPACTOR_HOST=tempo
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "3200"
      - "4317"
      - "4318"

  tempo:
    depends_on:
      minio:
        condition: service_healthy
    image: &tempoImage grafana/tempo:2.4.0
    restart: always
    volumes:
      - ./config/tempo/scalable-single-binary.yaml:/etc/tempo.yaml # Note: Tempo use scalable-single-binary.yaml
    environment:
      - TEMPO_S3_ENDPOINT=minio:9000
      - TEMPO_S3_ACCESS_KEY=lgtmp
      - TEMPO_S3_SECRET_KEY=supersecret
      - TEMPO_S3_INSECURE=true
    command:
      - -config.file=/etc/tempo.yaml
      - -target=scalable-single-binary
      - -log.level=error
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    ports:
      - "3100"
    # Horizontally scale up support(Monolithic mode)
    # https://grafana.com/docs/tempo/latest/setup/deployment/#scaling-monolithic-mode
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - tempo-memberlist

  grafana:
    depends_on:
      minio:
        condition: service_started
    image: grafana/grafana:10.3.3
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ../../common/config/tempo/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # load datasources
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      # - GF_TRACING_OPENTELEMETRY_OTLP_ADDRESS=agent:4317
      # - GF_TRACING_OPENTELEMETRY_CUSTOM_ATTRIBUTES=cluster:docker-compose,namespace:monitoring
    ports:
      - "3000:3000"
