version: '3.9'

# ============================================================================ #
#                  Read-Write Mode - Metrics
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/memcached.yaml
  - path: ../../common/compose-include/grafana-agent.yaml
  - path: ../../common/compose-include/grafana.yaml

services:
  gateway:
    # https://github.com/qclaogui/codelab-monitoring/blob/main/docker-compose/common/config/agent-flow/modules/docker/README.md
    labels:
      - metrics.agent.grafana.com/scrape=false
    depends_on:
      mimir-write:
        condition: service_healthy
      mimir-backend:
        condition: service_healthy
    image: ${NGINX_IMAGE:-docker.io/nginxinc/nginx-unprivileged:1.25-alpine}
    volumes:
      - ../../common/config/nginx/10-default-lgtmp.envsh:/docker-entrypoint.d/10-default-lgtmp.envsh
      - ../../common/config/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ../../common/config/mimir/gateway_mimir.conf:/etc/nginx/templates/gateway_mimir.conf.template
    environment:
      - MIMIR_DISTRIBUTOR_HOST=mimir-write
      - MIMIR_QUERY_FRONTEND_HOST=mimir-read
      - MIMIR_ALERT_MANAGER_HOST=mimir-backend
      - MIMIR_RULER_HOST=mimir-backend
      - MIMIR_COMPACTOR_HOST=mimir-backend
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "38080:8080"

  mimir-backend:
    depends_on:
      minio:
        condition: service_healthy
    image: &mimirImage ${MIMIR_IMAGE:-docker.io/grafana/mimir:2.11.0}
    volumes:
      - ../../common/config/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir/read-write-mode-metrics.yaml
      - -target=backend
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      replicas: 2

  mimir-read:
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../../common/config/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir/read-write-mode-metrics.yaml
      - -target=read
      - -config.expand-env=true
    deploy:
      replicas: 2


  mimir-write:
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../../common/config/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir/read-write-mode-metrics.yaml
      - -target=write
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - mimir-memberlist

  mimirtool:
    labels:
      metrics.agent.grafana.com/scrape: false
    image: ${MIMIRTOOL_IMAGE:-docker.io/grafana/mimirtool:2.11.0}
    volumes:
      - ../../../monitoring-mixins/crontab:/etc/crontabs/root
      - ../../../monitoring-mixins/agent-flow-mixin/deploy/agent-flow-mixin-alerts.yaml:/rules/agent-flow-mixin-alerts.yaml
      - ../../../monitoring-mixins/memcached-mixin/deploy/memcached-mixin-alerts.yaml:/rules/memcached-mixin-alerts.yaml
      - ../../../monitoring-mixins/mimir-mixin/deploy/mimir-mixin-rules.yaml:/rules/mimir-mixin-rules.yaml
      - ../../../monitoring-mixins/mimir-mixin/deploy/mimir-mixin-alerts.yaml:/rules/mimir-mixin-alerts.yaml
    environment:
      - MIMIR_ADDRESS=http://gateway:8080
      - MIMIR_TENANT_ID=anonymous
    entrypoint: crond -f
    restart: always
