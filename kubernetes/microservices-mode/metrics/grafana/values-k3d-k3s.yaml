testFramework:
  enabled: false

# Use an existing secret for the admin user.
admin:
  ## Name of the secret. Can be templated.
  existingSecret: "grafana-secret"
  userKey: admin-user
  passwordKey: admin-password

envFromConfigMaps:
  - name: grafana-env
    optional: true

podAnnotations:
  metrics.agent.grafana.com/scrape: "true"
  # metrics.agent.grafana.com/scheme: "http"    # The default scraping scheme is http
  # metrics.agent.grafana.com/path: "/metrics"  # The default path to scrape is /metrics
  metrics.agent.grafana.com/port: "3000"
  # metrics.agent.grafana.com/tenant: ".*"
  # metrics.agent.grafana.com/job: "grafana"
  metrics.agent.grafana.com/interval: "15s"   # The default interval to scrape is 1m
  # metrics.agent.grafana.com/timeout: "10s"    # The default timeout for scraping is 10s

# Enable creating the grafana configmap
createConfigmap: false

## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders
## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: 1
    folder: /dashboards
    searchNamespace: monitoring-system
    folderAnnotation: grafana_dashboard_folder
    provider:
      name: sidecarProvider
      orgid: 1
      type: file
      disableDelete: false
      allowUiUpdates: false
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    label: grafana_datasource
    labelValue: 1
    searchNamespace: monitoring-system
