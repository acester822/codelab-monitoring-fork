/*
Module: metrics-all
Description: Wrapper module to include all kubernetes metric modules and use cri parsing
*/
argument "forward_to" {
  // comment = "Must be a list(MetricssReceiver) where collected logs should be forwarded to"
	optional = false
}

argument "clustering" {
  // comment = "Whether or not clustering should be enabled"
  optional = true
  default = false
}

/********************************************
 * Kubernetes Auto Scrape ServiceMonitor
 ********************************************/
prometheus.operator.servicemonitors "auto_scrape_servicemonitors" {
  forward_to = argument.forward_to.value
  
  clustering {
    enabled = argument.clustering.value
  }
}


/********************************************
 * Kubernetes Auto Scrape PodMonitors
 ********************************************/
prometheus.operator.podmonitors "auto_scrape_podmonitors" {
  forward_to = argument.forward_to.value
    
  clustering {
    enabled = argument.clustering.value
  }
  
  selector {
      match_expression {
          key = "team"
          operator = "In"
          values = ["team-infra"]
      }
  }
}

/********************************************
 * Kubernetes Prometheus Rules To Mimir
 ********************************************/
mimir.rules.kubernetes "prometheus_rules_to_mimir" {
    address = coalesce(env("METRICS_ENDPOINT"), "http://nginx.monitoring-system:8080")
    tenant_id = "anonymous"
}