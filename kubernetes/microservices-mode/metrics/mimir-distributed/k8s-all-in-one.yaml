apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed
  namespace: monitoring-system
---
apiVersion: v1
data:
  alertmanager_fallback_config.yaml: |
    receivers:
        - name: default-receiver
    route:
        receiver: default-receiver
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-alertmanager-fallback-config
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir.yaml: |2

    activity_tracker:
      filepath: /active-query-tracker/activity.log
    alertmanager:
      data_dir: /data
      enable_api: true
      external_url: /alertmanager
      fallback_config_file: /configs/alertmanager_fallback_config.yaml
    blocks_storage:
      backend: s3
      bucket_store:
        sync_dir: /data/tsdb-sync
      tsdb:
        dir: /data/tsdb
        head_compaction_interval: 15m
        wal_replay_concurrency: 3
    compactor:
      compaction_interval: 30m
      data_dir: /data
      deletion_delay: 2h
      first_level_compaction_wait_period: 25m
      max_closing_blocks_concurrency: 2
      max_opening_blocks_concurrency: 4
      sharding_ring:
        wait_stability_min_duration: 1m
      symbols_flushers_concurrency: 4
    frontend:
      parallelize_shardable_queries: true
      scheduler_address: mimir-distributed-query-scheduler-headless.monitoring-system.svc:9095
    frontend_worker:
      grpc_client_config:
        max_send_msg_size: 419430400
      scheduler_address: mimir-distributed-query-scheduler-headless.monitoring-system.svc:9095
    ingester:
      ring:
        final_sleep: 0s
        num_tokens: 512
        tokens_file_path: /data/tokens
        unregister_on_shutdown: false
    ingester_client:
      grpc_client_config:
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600
    limits:
      max_cache_freshness: 10m
      max_query_parallelism: 240
      max_total_query_length: 12000h
    memberlist:
      abort_if_cluster_join_fails: false
      compression_enabled: false
      join_members:
      - dns+mimir-distributed-gossip-ring.monitoring-system.svc.cluster.local.:7946
    multitenancy_enabled: false
    querier:
      max_concurrent: 16
    query_scheduler:
      max_outstanding_requests_per_tenant: 800
    ruler:
      alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.mimir-distributed-alertmanager-headless.monitoring-system.svc.cluster.local./alertmanager
      enable_api: true
      rule_path: /data
    runtime_config:
      file: /var/mimir/runtime.yaml
    server:
      grpc_server_max_connection_age: 2m
      grpc_server_max_connection_age_grace: 5m
      grpc_server_max_connection_idle: 1m
    store_gateway:
      sharding_ring:
        tokens_file_path: /data/tokens
        unregister_on_shutdown: false
        wait_stability_min_duration: 1m
    usage_stats:
      enabled: false
      installation_mode: helm
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-config
  namespace: monitoring-system
---
apiVersion: v1
data:
  runtime.yaml: |2

    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-runtime
  namespace: monitoring-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-alertmanager
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
    prometheus.io/service-monitor: "false"
  name: mimir-distributed-alertmanager-headless
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: cluster
    port: 9094
    protocol: TCP
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-compactor
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-distributor
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
    prometheus.io/service-monitor: "false"
  name: mimir-distributed-distributor-headless
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: gossip-ring
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-gossip-ring
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: gossip-ring
    port: 7946
    protocol: TCP
    targetPort: 7946
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ingester
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
    prometheus.io/service-monitor: "false"
  name: mimir-distributed-ingester-headless
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-overrides-exporter
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-querier
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-frontend
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-scheduler
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
    prometheus.io/service-monitor: "false"
  name: mimir-distributed-query-scheduler-headless
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ruler
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-store-gateway
  namespace: monitoring-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
    prometheus.io/service-monitor: "false"
  name: mimir-distributed-store-gateway-headless
  namespace: monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 8080
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/name: mimir
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-distributor
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=distributor
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env:
        - name: GOMAXPROCS
          value: "8"
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: distributor
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
          subPath: null
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: distributor
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-overrides-exporter
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: overrides-exporter
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: overrides-exporter
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=overrides-exporter
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        name: overrides-exporter
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
          subPath: null
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 60
      tolerations: []
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-querier
  namespace: monitoring-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
    spec:
      affinity: {}
      containers:
      - args:
        - -target=querier
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env:
        - name: GOMAXPROCS
          value: "5"
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: querier
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
          subPath: null
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 180
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: querier
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-frontend
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=query-frontend
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: query-frontend
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /etc/mimir
          name: config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 180
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: query-frontend
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-scheduler
  namespace: monitoring-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: query-scheduler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: query-scheduler
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
    spec:
      affinity: {}
      containers:
      - args:
        - -target=query-scheduler
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        - -server.grpc.keepalive.max-connection-age=2562047h
        - -server.grpc.keepalive.max-connection-age-grace=2562047h
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: query-scheduler
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /etc/mimir
          name: config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 180
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: query-scheduler
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ruler
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ruler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: ruler
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=ruler
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: ruler
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
          subPath: null
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 180
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ruler
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-alertmanager
  namespace: monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  serviceName: mimir-distributed-alertmanager
  template:
    metadata:
      annotations:
        checksum/alertmanager-fallback-config: cc6c905e263e0359babd60d90616846016af5c454eeb81b2d4b5fa2986546083
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: alertmanager
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=alertmanager
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: alertmanager
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
        - mountPath: /configs/
          name: alertmanager-fallback-config
        - mountPath: /tmp
          name: tmp
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: alertmanager
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: active-queries
      - configMap:
          name: mimir-distributed-alertmanager-fallback-config
        name: alertmanager-fallback-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-compactor
  namespace: monitoring-system
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  serviceName: mimir-distributed-compactor
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: compactor
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=compactor
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: compactor
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 60
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: compactor
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: active-queries
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ingester
  namespace: monitoring-system
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  serviceName: mimir-distributed-ingester-headless
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: ingester
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=ingester
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        - -ingester.ring.instance-availability-zone=zone-default
        - -server.grpc-max-concurrent-streams=500
        env: null
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: ingester
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 60
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ingester
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: active-queries
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-store-gateway
  namespace: monitoring-system
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
  serviceName: mimir-distributed-store-gateway-headless
  template:
    metadata:
      annotations:
        checksum/config: 225f0ab7411eb036934fb219f01eead467956e5a2e25efa46570b0940fcff97b
      labels:
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/instance: mimir-distributed
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.11.0
        helm.sh/chart: mimir-distributed-5.2.2
      namespace: monitoring-system
    spec:
      affinity: {}
      containers:
      - args:
        - -target=store-gateway
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        env:
        - name: GOMAXPROCS
          value: "5"
        - name: GOMEMLIMIT
          value: "134217728"
        envFrom:
        - secretRef:
            name: mimir-distributed-env
        image: grafana/mimir:2.11.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: store-gateway
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 60
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-distributed
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: store-gateway
            app.kubernetes.io/instance: mimir-distributed
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-distributed-config
        name: config
      - configMap:
          name: mimir-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: active-queries
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-alertmanager
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-compactor
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-distributor
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ingester
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-overrides-exporter
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: overrides-exporter
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-querier
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-frontend
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-scheduler
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: query-scheduler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ruler
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ruler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-store-gateway
  namespace: monitoring-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-alertmanager
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/alertmanager
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-compactor
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/compactor
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-distributor
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/distributor
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ingester
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/ingester
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-overrides-exporter
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/overrides-exporter
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: overrides-exporter
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-querier
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/querier
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-frontend
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/query-frontend
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-query-scheduler
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/query-scheduler
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: query-scheduler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-ruler
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/ruler
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: ruler
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.11.0
    helm.sh/chart: mimir-distributed-5.2.2
  name: mimir-distributed-store-gateway
  namespace: monitoring-system
spec:
  endpoints:
  - port: http-metrics
    relabelings:
    - replacement: monitoring-system/store-gateway
      sourceLabels:
      - job
      targetLabel: job
    - replacement: mimir-distributed
      targetLabel: cluster
    scheme: http
  namespaceSelector:
    matchNames:
    - monitoring-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir-distributed
      app.kubernetes.io/name: mimir
