apiVersion: v1
kind: Namespace
metadata:
  name: logging-system
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed
  namespace: logging-system
---
apiVersion: v1
data:
  LOKI_COMPACTOR_HOST: loki-distributed-compactor.logging-system.svc.cluster.local
  LOKI_DISTRIBUTOR_HOST: loki-distributed-distributor.logging-system.svc.cluster.local
  LOKI_INGESTER_HOST: loki-distributed-ingester.logging-system.svc.cluster.local
  LOKI_QUERIER_HOST: loki-distributed-querier.logging-system.svc.cluster.local
  LOKI_QUERY_FRONTEND_HOST: loki-distributed-query-frontend-headless.logging-system.svc.cluster.local
  LOKI_RULER_HOST: loki-distributed-ruler.logging-system.svc.cluster.local
kind: ConfigMap
metadata:
  name: nginx-env
  namespace: gateway
---
apiVersion: v1
data:
  gateway_loki.conf.template: |-
    server {
        listen 3100;
        listen [::]:3100;

        location = / {
          return 200 'OK';
          auth_basic off;
          access_log off;
        }

        proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;

        # Distributor endpoints
        location = /api/prom/push {
          proxy_pass      http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }
        location = /loki/api/v1/push {
          proxy_pass      http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }
        location = /distributor/ring {
          proxy_pass      http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }

        # Ingester endpoints
        location /flush {
          proxy_pass      http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }
        location ^~ /ingester/ {
          proxy_pass      http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }
        location = /ingester {
          internal;        # to suppress 301
        }

        # Ring
        location = /ring {
          proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }

        # MemberListKV
        location = /memberlist {
          proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }


        # Ruler endpoints
        location = /ruler/ring {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }


        # Compactor endpoints
        location = /compactor/ring {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }
        location = /loki/api/v1/delete {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }
        location = /loki/api/v1/cache/generation_numbers {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }

        # IndexGateway endpoints
        location = /indexgateway/ring {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }

        # Config endpoints
        location = /config {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }

        # QueryFrontend, Querier endpoints
        location = /api/prom/tail {
          proxy_pass      http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location = /loki/api/v1/tail {
          proxy_pass      http://${LOKI_QUERIER_HOST}:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location ~ /api/prom/.* {
          proxy_pass      http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1.* {
          proxy_pass      http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }
      }
kind: ConfigMap
metadata:
  name: nginx-templates
  namespace: gateway
---
apiVersion: v1
data:
  config.yaml: |2

    auth_enabled: false

    analytics:
     reporting_enabled: false

    chunk_store_config:
      max_look_back_period: 0s

    # https://grafana.com/docs/loki/latest/configure/#use-environment-variables-in-the-configuration
    common:
      compactor_address: http://loki-distributed-compactor:3100
      replication_factor: 1
      storage:
        s3:
          bucketnames: loki-data
          endpoint: ${LOKI_S3_ENDPOINT:-minio.minio-system.svc:443}
          access_key_id: ${LOKI_S3_ACCESS_KEY_ID:-lgtmp}
          secret_access_key: ${LOKI_S3_SECRET_ACCESS_KEY:-supersecret}
          insecure: ${LOKI_S3_INSECURE:-false}
          s3forcepathstyle: true
          http_config:
            insecure_skip_verify: true

    compactor:
      working_directory: /tmp/compactor
      shared_store: s3
      compactor_ring:
        kvstore:
          store: memberlist

    distributor:
      ring:
        kvstore:
          store: memberlist

    frontend:
      log_queries_longer_than: 5s
      tail_proxy_url: http://loki-distributed-querier:3100
      scheduler_address: loki-distributed-query-scheduler:9095
    frontend_worker:
      scheduler_address: loki-distributed-query-scheduler:9095

    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal

    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m

    memberlist:
      join_members:
      - loki-distributed-memberlist

    query_range:
      align_queries_with_step: true
      cache_results: true
      max_retries: 5
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            ttl: 1h

    ruler:
      ring:
        kvstore:
          store: memberlist
      storage:
        s3:
          bucketnames: loki-ruler
        type: s3

    runtime_config:
      file: /var/loki-distributed-runtime/runtime.yaml

    schema_config:
      configs:
      - from: "2023-08-01"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v12
        store: boltdb-shipper

    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
      log_level: warn

    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        index_gateway_client:
          server_address: dns:///loki-distributed-index-gateway:9095
        shared_store: s3

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

    tracing:
      enabled: false
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed
  namespace: logging-system
---
apiVersion: v1
data:
  runtime.yaml: |2

    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-runtime
  namespace: logging-system
---
apiVersion: v1
data:
  datasources.yaml: |
    apiVersion: 1

    deleteDatasources:
    - name: Logs
      uid: logs

    datasources:
    # Loki for logs
    - name: Logs
      type: loki
      uid: logs
      access: proxy
      url: http://nginx.gateway.svc.cluster.local:3100
      basicAuth: false
      isDefault: true
      version: 1
      editable: true
kind: ConfigMap
metadata:
  labels:
    grafana_datasource: "1"
  name: grafana-datasources
  namespace: monitoring-system
---
apiVersion: v1
data:
  LOKI_S3_SECRET_ACCESS_KEY: VkQ1MzhPWXhTRWlHRDRJOW1tRmZxRk1DR3ExdklpR20=
kind: Secret
metadata:
  name: loki-distributed-env-58m52b99kc
  namespace: logging-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-compactor
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-distributor
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: index-gateway
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-index-gateway
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: index-gateway
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: index-gateway
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-distributed-index-gateway-headless
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: index-gateway
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-ingester
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-distributed-ingester-headless
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-memberlist
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 7946
    protocol: TCP
    targetPort: http-memberlist
  selector:
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-querier
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-query-frontend
  namespace: logging-system
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
    prometheus.io/service-monitor: "false"
  name: loki-distributed-query-frontend-headless
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-query-scheduler
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpclb
    port: 9095
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  name: loki-distributed-ruler
  namespace: logging-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-distributor
  namespace: logging-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: distributor
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: distributor
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=distributor
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: distributor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-querier
  namespace: logging-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: querier
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: querier
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=querier
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: querier
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: querier
            app.kubernetes.io/instance: loki-distributed
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-query-frontend
  namespace: logging-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: query-frontend
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=query-frontend
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: query-frontend
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-query-scheduler
  namespace: logging-system
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-scheduler
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: query-scheduler
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-scheduler
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: query-scheduler
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=query-scheduler
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: query-scheduler
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: ruler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-ruler
  namespace: logging-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: ruler
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: ruler
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ruler
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: ruler
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=ruler
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: ruler
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
        - mountPath: /tmp/loki
          name: tmp
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-compactor
  namespace: logging-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-distributed-compactor-headless
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: compactor
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: compactor
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: compactor
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=compactor
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: compactor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: temp
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: index-gateway
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-index-gateway
  namespace: logging-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: index-gateway
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-distributed-index-gateway-headless
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: index-gateway
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: index-gateway
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: index-gateway
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=index-gateway
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: index-gateway
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-ingester
  namespace: logging-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-distributed-ingester-headless
  template:
    metadata:
      annotations:
        checksum/config: 684b1417c17a8d288d9276d1cc63260075683c560c3f2eb7eb8e881ae03ba479
      labels:
        app.kubernetes.io/component: ingester
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ingester
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: ingester
                app.kubernetes.io/instance: loki-distributed
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=ingester
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-distributed-env-58m52b99kc
        image: docker.io/grafana/loki:2.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: ingester
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-distributed
      terminationGracePeriodSeconds: 300
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ingester
            app.kubernetes.io/instance: loki-distributed
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-distributed
        name: config
      - configMap:
          name: loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.1
  name: loki-distributed-query-scheduler
  namespace: logging-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: query-scheduler
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
