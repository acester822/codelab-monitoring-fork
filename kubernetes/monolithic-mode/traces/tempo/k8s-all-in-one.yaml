apiVersion: v1
kind: Namespace
metadata:
  name: tracing-system
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: tempo-1.7.2
  name: tempo
  namespace: tracing-system
---
apiVersion: v1
data:
  overrides.yaml: |-
    overrides:
      "*":
        block_retention: 7d
        ingestion_burst_size_bytes: 20000000
        ingestion_rate_limit_bytes: 15000000
  tempo.yaml: |+
    # For more information on this configuration, see the complete reference guide at
    # https://grafana.com/docs/tempo/latest/configuration/

    stream_over_http_enabled: true

    multitenancy_enabled: false
    usage_report:
      reporting_enabled: false

    compactor:
      compaction:
        block_retention: 1h

    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318

    ingester:
      trace_idle_period: 10s
      max_block_bytes: 1_000_000
      max_block_duration: 5m

    querier:
      frontend_worker:
        frontend_address: tempo:9095

    metrics_generator:
      processor:
        span_metrics:
          # Configure extra dimensions to add as metric labels.
          dimensions:
          - http.method
          - http.target
          - http.status_code
          - service.version
        # Service graph metrics create node and edge metrics for determinng service interactions.
        service_graphs:
          # Configure extra dimensions to add as metric labels.
          dimensions:
          - http.method
          - http.target
          - http.status_code
          - service.version
      storage:
        path: /tmp/tempo/generator/wal
        remote_write_add_org_id_header: true
        remote_write:
        - url: http://nginx.gateway.svc.cluster.local:8080/api/v1/push
          send_exemplars: true
          send_native_histograms: true
          headers:
            X-Scope-OrgID: "anonymous"

    server:
      http_listen_port: 3100
      grpc_listen_port: 9095

    storage:
      trace:
        backend: s3
        wal:
          path: /tmp/tempo/wal
        s3:
          bucket: tempo-data
          endpoint: ${TEMPO_S3_ENDPOINT:-minio.minio-system.svc:443}
          access_key: ${TEMPO_S3_ACCESS_KEY:-lgtmp}
          secret_key: ${TEMPO_S3_SECRET_KEY:-supersecret}
          insecure: ${TEMPO_S3_INSECURE:-false}
          tls_insecure_skip_verify: true

    overrides:
      per_tenant_override_config: /conf/overrides.yaml
      defaults:
        metrics_generator:
          processors:
          - service-graphs
          - span-metrics

kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: tempo-1.7.2
  name: tempo
  namespace: tracing-system
---
apiVersion: v1
data:
  JAEGER_AGENT_HOST: Z3JhZmFuYS1hZ2VudC5tb25pdG9yaW5nLXN5c3RlbS5zdmMuY2x1c3Rlci5sb2NhbA==
  JAEGER_AGENT_PORT: NjgzMQ==
  JAEGER_SAMPLER_PARAM: MQ==
  JAEGER_SAMPLER_TYPE: Y29uc3Q=
  JAEGER_TAGS: YXBwPXRlbXBv
  TEMPO_S3_SECRET_KEY: VkQ1MzhPWXhTRWlHRDRJOW1tRmZxRk1DR3ExdklpR20=
kind: Secret
metadata:
  name: tempo-env-gk54k88t7g
  namespace: tracing-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: tempo-1.7.2
  name: tempo
  namespace: tracing-system
spec:
  ports:
  - name: tempo-grpc
    port: 9095
    targetPort: 9095
  - name: tempo-prom-metrics
    port: 3100
    targetPort: 3100
  - name: tempo-jaeger-thrift-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: tempo-jaeger-thrift-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: tempo-jaeger-thrift-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: grpc-tempo-jaeger
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: tempo-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  - name: tempo-otlp-legacy
    port: 55680
    protocol: TCP
    targetPort: 55680
  - name: tempo-otlp-http-legacy
    port: 55681
    protocol: TCP
    targetPort: 4318
  - name: grpc-tempo-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: tempo-otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: tempo-opencensus
    port: 55678
    protocol: TCP
    targetPort: 55678
  selector:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/name: tempo
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tempo
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: tempo-1.7.2
  name: tempo
  namespace: tracing-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/name: tempo
  serviceName: tempo-headless
  template:
    metadata:
      annotations:
        checksum/config: f1d170a0130edd0da1b51eab83df1f9642ad10ca67130fd306f69cabe9540145
        logs.agent.grafana.com/scrape: "true"
        logs.agent.grafana.com/scrub-level: info
        profiles.grafana.com/cpu.port_name: prom-metrics
        profiles.grafana.com/cpu.scrape: "true"
        profiles.grafana.com/goroutine.port_name: prom-metrics
        profiles.grafana.com/goroutine.scrape: "true"
        profiles.grafana.com/memory.port_name: prom-metrics
        profiles.grafana.com/memory.scrape: "true"
        pyroscope.io/service_name: tempo
      labels:
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/name: tempo
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: tempo-env-gk54k88t7g
        image: grafana/tempo:2.4.0
        imagePullPolicy: IfNotPresent
        name: tempo
        ports:
        - containerPort: 9095
          name: tempo-grpc
        - containerPort: 3100
          name: prom-metrics
        - containerPort: 6831
          name: jaeger-thrift-c
          protocol: UDP
        - containerPort: 6832
          name: jaeger-thrift-b
          protocol: UDP
        - containerPort: 14268
          name: jaeger-thrift-h
        - containerPort: 14250
          name: jaeger-grpc
        - containerPort: 9411
          name: zipkin
        - containerPort: 55680
          name: otlp-legacy
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 55681
          name: otlp-httplegacy
        - containerPort: 4318
          name: otlp-http
        - containerPort: 55678
          name: opencensus
        resources: {}
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
        - mountPath: /tmp
          name: tmp
      serviceAccountName: tempo
      volumes:
      - configMap:
          name: tempo
        name: tempo-conf
      - emptyDir: {}
        name: tmp
  updateStrategy:
    type: RollingUpdate
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tempo
  namespace: tracing-system
spec:
  endpoints:
  - interval: 15s
    port: tempo-prom-metrics
    relabelings:
    - action: replace
      replacement: tracing-system/tempo
      sourceLabels:
      - job
      targetLabel: job
    scheme: http
  namespaceSelector:
    matchNames:
    - tracing-system
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/name: tempo
