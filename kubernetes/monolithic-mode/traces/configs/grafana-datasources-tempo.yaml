apiVersion: 1

deleteDatasources:
- name: Metrics
  uid: metrics
- name: Traces
  uid: traces

datasources:
# Mimir for metrics
- name: Metrics
  type: prometheus
  uid: metrics
  access: proxy
  orgId: 1
  url: http://nginx.gateway.svc.cluster.local:8080/prometheus
  basicAuth: false
  isDefault: false
  version: 1
  editable: true
  jsonData:
    prometheusType: Mimir
    exemplarTraceIdDestinations:
      - name: traceID
        datasourceUid: traces

# Tempo for traces
- name: Traces
  type: tempo
  access: proxy
  uid: traces
  url: http://nginx.gateway.svc.cluster.local:3200
  basicAuth: false
  isDefault: true
  version: 1
  editable: true
  jsonData:
    search:
      hide: false
    nodeGraph:
      enabled: true
    serviceMap:
      datasourceUid: metrics
    traceQuery:
      timeShiftEnabled: true
      spanStartTimeShift: '-1h'
      spanEndTimeShift: '1h'
    spanBar:
      type: 'Tag'
      tag: 'http.path'
    tracesToMetrics:
      datasourceUid: metrics
      spanStartTimeShift: '-1h'
      spanEndTimeShift: '1h'
      tags: [{ key: 'service.name', value: 'service' }, { key: 'span_name' }, { key: 'http_method' }]
      queries:
      - name: '(R) Rate'
        query: 'sum(rate(traces_spanmetrics_calls_total{$$__tags}[$$__rate_interval]))'
      - name: '(E) Error Rate'
        query: 'sum(rate(traces_spanmetrics_calls_total{$$__tags, status_code="STATUS_CODE_ERROR"}[$$__rate_interval]))'
      - name: '(D) Duration'
        query: 'histogram_quantile(0.9, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[$$__rate_interval])) by (le))'
