/*
Module: Redis integrations
Description: Wrapper module to integration Redis metrics
*/
argument "clustering" {
	// comment = "Whether or not clustering should be enabled"
	optional = true
	default  = true
}

argument "namespace" {
	// comment = "Namespace of the Redis deployment"
	optional = true
	default  = "default"
}

argument "secret_name" {
	// comment = "Name of the secret for Redis"
	optional = true
	default  = "integrations-redis-secret"
}

argument "instance" {
	// comment  = "Instance of the Redis"
	optional = true
	default  = "master"
}

argument "forward_to" { }

remote.kubernetes.secret "redis" {
	name      = argument.secret_name.value
	namespace = argument.namespace.value
}

// Metrics
prometheus.exporter.redis "redis" {
	redis_addr     = nonsensitive(remote.kubernetes.secret.redis.data["redis-addr"])
	redis_password = nonsensitive(remote.kubernetes.secret.redis.data["redis-password"])
}

prometheus.scrape "integrations_redis" {
	clustering {
		enabled = argument.clustering.value
	}

	targets = concat(
		prometheus.exporter.redis.redis.targets,
	)
	job_name   = "integrations/redis"
	forward_to = [prometheus.relabel.integrations_redis.receiver]
}

prometheus.relabel "integrations_redis" {
	rule {
		replacement  = argument.instance.value
		target_label = "instance"
	}
	forward_to = argument.forward_to.value
}
