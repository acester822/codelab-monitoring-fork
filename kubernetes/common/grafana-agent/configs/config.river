/*
The following example shows using the default all logs processing module, for
a single tenant and specifying the destination url/credentials via environment
variables.
*/
logging {
	level  = coalesce(env("AGENT_LOG_LEVEL"), "info")
	format = "logfmt"
}

module.file "lgtmp" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/lgtmp.river"

	arguments {
		cluster           = coalesce(env("CLUSTER"), "k3d-k3s")
		metrics_endpoint  = env("METRICS_ENDPOINT")
		logs_endpoint     = env("LOGS_ENDPOINT")
		profiles_endpoint = env("PROFILES_ENDPOINT")
	}
}

/********************************************
 * Metrics
 ********************************************/
module.file "metrics_primary" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/metrics.river"

	arguments {
		forward_to = [module.file.lgtmp.exports.metrics_receiver]
		clustering = true
	}
}

/********************************************
 * Logs
 ********************************************/
module.git "event_logs" {
	repository = "https://github.com/grafana/agent-modules.git"
	revision   = "main"
	path       = "modules/kubernetes/logs/events.river"

	arguments {
		forward_to    = [module.file.lgtmp.exports.logs_receiver]
		git_pull_freq = "0s"
	}
}

/********************************************
 * Profiles
 ********************************************/
module.file "profiles_primary" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/profiles.river"

	arguments {
		forward_to = [module.file.lgtmp.exports.profiles_receiver]
		clustering = true
	}
}
