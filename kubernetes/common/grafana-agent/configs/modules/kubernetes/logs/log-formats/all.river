/*
Module: log-format-all
Description: Wrapper module to include all log-format modules
*/
argument "forward_to" {
	// comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
	optional = false
}

export "process" {
	value = module.file.log_format_common_log.exports.process
}

module.file "log_format_common_log" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/common-log.river"

	arguments {
		forward_to = [module.file.log_format_dotnet.exports.process.receiver]
	}
}

module.file "log_format_dotnet" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/dotnet.river"

	arguments {
		forward_to = [module.file.log_format_istio.exports.process.receiver]
	}
}

module.file "log_format_istio" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/istio.river"

	arguments {
		forward_to = [module.file.log_format_json.exports.process.receiver]
	}
}

module.file "log_format_json" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/json.river"

	arguments {
		forward_to = [module.file.log_format_klog.exports.process.receiver]
	}
}

module.file "log_format_klog" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/klog.river"

	arguments {
		forward_to = [module.file.log_format_log4j.exports.process.receiver]
	}
}

module.file "log_format_log4j" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/log4j.river"

	arguments {
		forward_to = [module.file.log_format_logfmt.exports.process.receiver]
	}
}

module.file "log_format_logfmt" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/logfmt.river"

	arguments {
		forward_to = [module.file.log_format_otel.exports.process.receiver]
	}
}

module.file "log_format_otel" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/otel.river"

	arguments {
		forward_to = [module.file.log_format_postgres.exports.process.receiver]
	}
}

module.file "log_format_postgres" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/postgres.river"

	arguments {
		forward_to = [module.file.log_format_python.exports.process.receiver]
	}
}

module.file "log_format_python" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/python.river"

	arguments {
		forward_to = [module.file.log_format_spring_boot.exports.process.receiver]
	}
}

module.file "log_format_spring_boot" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/spring-boot.river"

	arguments {
		forward_to = [module.file.log_format_syslog.exports.process.receiver]
	}
}

module.file "log_format_syslog" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/syslog.river"

	arguments {
		forward_to = [module.file.log_format_zerolog.exports.process.receiver]
	}
}

module.file "log_format_zerolog" {
	filename = coalesce(env("AGENT_CONFIG_FOLDER"), "/etc/agent-modules") + "/kubernetes/logs/log-formats/zerolog.river"

	arguments {
		forward_to = argument.forward_to.value
	}
}
