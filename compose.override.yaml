
# https://docs.docker.com/compose/multiple-compose-files/include/#include-and-overrides

# https://github.com/qclaogui/codelab-monitoring/blob/main/docker-compose/common/config/agent-flow/modules/docker/README.md
x-labels: &profiles-labels
  profiles.agent.grafana.com/cpu.scrape: true
  profiles.agent.grafana.com/memory.scrape: true
  profiles.agent.grafana.com/goroutine.scrape: true

x-environment: &jaeger-environment
  JAEGER_AGENT_HOST: grafana-agent
  JAEGER_AGENT_PORT: 6831
  JAEGER_SAMPLER_TYPE: const
  JAEGER_SAMPLER_PARAM: 1

services:
  # override compose.yaml included service grafana-agent's entrypoint to use monolithic-mode-all.river. default(metrics.river)
  grafana-agent:
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/monolithic-mode-all.river # Note: Agent use monolithic-mode-all.river
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --cluster.join-addresses=grafana-agent-cluster:12345
      - --disable-reporting=true

  # override compose.yaml included service loki's labels and environment to enabled profiles and traces data collection
  loki:
    labels:
      <<: *profiles-labels
      profiles.agent.grafana.com/service_name: loki
      logs.agent.grafana.com/log-format: json
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=loki

  # override compose.yaml included service grafana's labels and environment to enabled profiles data collection
  grafana:
    labels:
      <<: *profiles-labels
      profiles.agent.grafana.com/service_name: grafana
      profiles.agent.grafana.com/port: 6060
      logs.agent.grafana.com/log-format: logfmt
    environment:
      - GF_LOG_LEVEL=warn
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor tracesEmbeddedFlameGraph traceqlSearch correlations metricsSummary traceToMetrics traceToProfiles
      - GF_DIAGNOSTICS_PROFILING_ENABLED=true
      - GF_DIAGNOSTICS_PROFILING_ADDR=0.0.0.0
      - GF_DIAGNOSTICS_PROFILING_PORT=6060

  # override compose.yaml included service tempo's labels and environment to enabled profiles and traces data collection
  tempo:
    labels:
      <<: *profiles-labels
      profiles.agent.grafana.com/service_name: tempo
      logs.agent.grafana.com/log-format: logfmt
    depends_on:
      minio:
        condition: service_healthy
      mimir:
        condition: service_healthy
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=tempo

  # override compose.yaml included service mimir's labels and environment to enabled profiles and traces data collection
  mimir:
    labels:
      <<: *profiles-labels
      profiles.agent.grafana.com/service_name: mimir
      logs.agent.grafana.com/log-format: logfmt
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=mimir

  # override compose.yaml included service pyroscope's labels and environment to enabled traces data collection
  pyroscope:
    labels:
      - logs.agent.grafana.com/log-format=logfmt
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=pyroscope
